CL SCR;
ALTER SESSION SET CURRENT_SCHEMA = PTTK03_QLTUYENDUNG;

CREATE OR REPLACE FUNCTION UFN_MAKE_ID(RL VARCHAR2, CID VARCHAR2)
RETURN VARCHAR2 AS NID VARCHAR2(8); BEGIN
    IF CID IS NULL THEN NID := 'N3' || RL || '0001'; RETURN NID; END IF;
    NID := TO_NUMBER(SUBSTR(CID, 5)) + 1;
    RETURN 'N3' || RL || LPAD(NID, 4, '0');
END;
/

/* DOANHNGHIEP
 */
CREATE OR REPLACE PROCEDURE USP_DOANHNGHIEP_INS(
    ITENCTY VARCHAR2, IMASOTHUE VARCHAR2, INGDAIDIEN VARCHAR2, IDCHI VARCHAR2,
    IEMAIL VARCHAR2, INGAYLAPHD VARCHAR2, INGAYHHHD VARCHAR2, INVPHUTRACH VARCHAR2,
    IMADN OUT VARCHAR2
) AS BEGIN
    BEGIN SELECT MADN INTO IMADN FROM DOANHNGHIEP
    WHERE MADN = (SELECT MAX(MADN) FROM DOANHNGHIEP);
    EXCEPTION WHEN NO_DATA_FOUND THEN IMADN := NULL; END;
    IMADN := UFN_MAKE_ID('DN', IMADN);

    INSERT INTO DOANHNGHIEP VALUES (IMADN, ITENCTY, IMASOTHUE, INGDAIDIEN,
        IDCHI, IEMAIL, TO_DATE(INGAYLAPHD, 'DD/MM/YYYY'),
        TO_DATE(INGAYHHHD, 'DD/MM/YYYY'), INVPHUTRACH);
END;
/

/* UNGVIEN
 */
CREATE OR REPLACE PROCEDURE USP_UNGVIEN_INS(
    IHOTEN VARCHAR2, IDCHI VARCHAR2, ISDT VARCHAR2, IEMAIL VARCHAR2,
    INVPHUTRACH VARCHAR2, IMAUV OUT VARCHAR2
) AS BEGIN
    BEGIN SELECT MAUV INTO IMAUV FROM UNGVIEN
    WHERE MAUV = (SELECT MAX(MAUV) FROM UNGVIEN);
    EXCEPTION WHEN NO_DATA_FOUND THEN IMAUV := NULL; END;
    IMAUV := UFN_MAKE_ID('UV', IMAUV);

    INSERT INTO UNGVIEN VALUES
    (IMAUV, IHOTEN, IDCHI, ISDT, IEMAIL, INVPHUTRACH);
END;
/

/* PTTDANGTUYEN
 */
CREATE OR REPLACE PROCEDURE USP_PTTDANGTUYEN_INS(
    IMADN VARCHAR2, IVITRIUT VARCHAR2, ISOLUONGTD INT, INGAYBD VARCHAR2,
    INGAYKT VARCHAR2, IYEUCAUUV VARCHAR2, ITONGTIEN INT, IHTTHANHTOAN NUMBER,
    INVLAP VARCHAR2, IMAPHIEU OUT VARCHAR2
) AS BEGIN
    BEGIN SELECT MAPHIEU INTO IMAPHIEU FROM PTTDANGTUYEN WHERE MADN = IMADN
        AND MAPHIEU = (SELECT MAX(MAPHIEU) FROM PTTDANGTUYEN WHERE MADN = IMADN);
    EXCEPTION WHEN NO_DATA_FOUND THEN IMAPHIEU := NULL; END;
    IMAPHIEU := UFN_MAKE_ID('PH', IMAPHIEU);

    INSERT INTO PTTDANGTUYEN VALUES (IMADN, IMAPHIEU, IVITRIUT, ISOLUONGTD,
        TO_DATE(INGAYBD, 'DD/MM/YYYY'), TO_DATE(INGAYKT, 'DD/MM/YYYY'),
        IYEUCAUUV, ITONGTIEN, 0, IHTTHANHTOAN, INVLAP);
END;
/

/* GIAYTOUT
 */
CREATE OR REPLACE PROCEDURE USP_GIAYTOUT_INS(
    IMAUV VARCHAR2, IMADN VARCHAR2, IMAPHIEU VARCHAR2, ITHONGTIN VARCHAR2,
    ILOAIGIAY NUMBER, IMAGIAY OUT NUMBER
) AS BEGIN
    BEGIN SELECT MAGIAY INTO IMAGIAY FROM GIAYTOUT WHERE MAUV = IMAUV
        AND MADN = IMADN AND MAPHIEU = IMAPHIEU AND MAGIAY = (SELECT MAX(MAGIAY)
        FROM GIAYTOUT WHERE MAUV = IMAUV AND MADN = IMADN AND MAPHIEU = IMAPHIEU);
    EXCEPTION WHEN NO_DATA_FOUND THEN IMAGIAY := 0; END;
    IMAGIAY := IMAGIAY + 1;

    INSERT INTO GIAYTOUT VALUES
    (IMAUV, IMADN, IMAPHIEU, IMAGIAY, ITHONGTIN, ILOAIGIAY);
END;
/

/* PDKQUANGCAO
 */
CREATE OR REPLACE PROCEDURE USP_PDKQUANGCAO_INS(
    IMADN VARCHAR2, IMAPHIEU VARCHAR2, IMAHT NUMBER, INGAYBD VARCHAR2,
    INGAYKT VARCHAR2
) AS CNGAYBD DATE; DTNGAYBD DATE; BEGIN
    CNGAYBD := TO_DATE(INGAYBD, 'DD/MM/YYYY');
    SELECT NGAYBD INTO DTNGAYBD FROM PTTDANGTUYEN
    WHERE MADN = IMADN AND MAPHIEU = IMAPHIEU;

    IF CNGAYBD < DTNGAYBD THEN
        RAISE_APPLICATION_ERROR(-20002, 'NGAYBD MUST NOT BE BEFORE NGAYBD OF '
            || 'PTTDANGTUYEN, ' || TO_CHAR(DTNGAYBD, 'DD/MM/YYYY') || '!');
    END IF;

    INSERT INTO PDKQUANGCAO VALUES
    (IMADN, IMAPHIEU, IMAHT, CNGAYBD, TO_DATE(INGAYKT, 'DD/MM/YYYY'));
END;
/

/* CTHOADON
 */
CREATE OR REPLACE PROCEDURE USP_CTHOADON_INS(
    IMADN VARCHAR2, IMAPHIEU VARCHAR2, ISOTIEN INT, INGAYTRA VARCHAR2,
    IPTTHANHTOAN NUMBER, IMACT OUT NUMBER
) AS CNGAYTRA DATE; ONGAYTRA DATE; REQSOTIEN INT; CTONGTIEN INT;
    CTIENDATRA INT; CHTTHANHTOAN NUMBER(2);
BEGIN SAVEPOINT SVP_CTHOADON_INS;
    SELECT TONGTIEN, TIENDATRA, HTTHANHTOAN
        INTO CTONGTIEN, CTIENDATRA, CHTTHANHTOAN FROM PTTDANGTUYEN
    WHERE MADN = IMADN AND MAPHIEU = IMAPHIEU;

    IF CTONGTIEN <= CTIENDATRA THEN
        RAISE_APPLICATION_ERROR(-20002, 'ALREADY PAID IN FULL! TOTAL: '
            || TO_CHAR(CTONGTIEN) || ', PAID: ' || TO_CHAR(CTIENDATRA)
            || '!'); END IF;

    CNGAYTRA := TO_DATE(INGAYTRA, 'DD/MM/YYYY');
    
    BEGIN SELECT NGAYTRA INTO ONGAYTRA FROM CTHOADON WHERE MADN = IMADN
        AND MAPHIEU = IMAPHIEU AND MACT = (SELECT MIN(MACT) FROM CTHOADON
            WHERE MADN = IMADN AND MAPHIEU = IMAPHIEU);
    EXCEPTION WHEN NO_DATA_FOUND THEN ONGAYTRA := NULL; END;

    IF ONGAYTRA IS NOT NULL AND CNGAYTRA - ONGAYTRA > 10 THEN
        RAISE_APPLICATION_ERROR(-20002, 'NGAYTRA MUST BE NO MORE THAN 10 DAYS '
            || 'SINCE FIRST PAYMENT DATE OF ' || TO_CHAR(ONGAYTRA, 'DD/MM/YYYY ')
            || '!'); END IF;

    IF CHTTHANHTOAN = 1 THEN REQSOTIEN := CTONGTIEN;
    ELSIF CTONGTIEN - CTIENDATRA - ISOTIEN <= 0 THEN REQSOTIEN := 0;
    ELSIF CTONGTIEN - CTIENDATRA - CTONGTIEN * 30 / 100 < 0 THEN
        REQSOTIEN := CTONGTIEN - CTIENDATRA;
    ELSE REQSOTIEN := CTONGTIEN * 30 / 100; END IF;

    IF ISOTIEN < REQSOTIEN THEN RAISE_APPLICATION_ERROR(-20002, 'SOTIEN MUST '
        || 'BE AT LEAST ' || REQSOTIEN || '!'); END IF;

    BEGIN SELECT MACT, NGAYTRA INTO IMACT, ONGAYTRA FROM CTHOADON
        WHERE MADN = IMADN AND MAPHIEU = IMAPHIEU AND MACT = (SELECT MAX(MACT)
            FROM CTHOADON WHERE MADN = IMADN AND MAPHIEU = IMAPHIEU);
    EXCEPTION WHEN NO_DATA_FOUND THEN IMACT := 0; ONGAYTRA := NULL; END;

    IF ONGAYTRA IS NOT NULL AND CNGAYTRA < ONGAYTRA THEN
        RAISE_APPLICATION_ERROR(-20002, 'NGAYTRA MUST NOT BE BEFORE THE LAST '
            || 'PAYMENT DATE OF ' || TO_CHAR(ONGAYTRA, 'DD/MM/YYYY ')
            || '!'); END IF;

    IMACT := IMACT + 1;
    INSERT INTO CTHOADON VALUES
    (IMADN, IMAPHIEU, IMACT, ISOTIEN, CNGAYTRA, IPTTHANHTOAN);

    UPDATE PTTDANGTUYEN SET TIENDATRA = TIENDATRA + ISOTIEN
    WHERE MADN = IMADN AND MAPHIEU = IMAPHIEU;
EXCEPTION WHEN OTHERS THEN ROLLBACK TO SVP_CTHOADON_INS; RAISE;
END;
/